import axion from "axios";
import { useQuery } from "react-query";
import styles from "./page8_01.module.scss";
import { Grid } from "antd";
interface TodoElement {
  id: number;
  title: string;
  subtitle: string;
}
const { useBreakpoint } = Grid;
// 必須使用 異步函數抓取api
async function fetchTodos() {
  try {
    const response = await axion.get("http://localhost:3005/todo");
    return response.data;
  } catch (error) {
    throw new Error("代辦事項載入失敗...");
  }
}

function Page5_01() {
  const screens = useBreakpoint();

  // const { useQuery API } useQuery(queryKey(Query名稱) , queryFunction(API請求函數))
  const { data, isLoading, isError, error, isFetched } = useQuery(
    "todo",
    fetchTodos,
    {
      // 預設為 true，在每次切換視窗時自動重新請求數據，設定為 false 可減少不必要的請求增加效能
      refetchOnWindowFocus: false,
    }
  );

  if (!isFetched) return <div>正在請求代辦事項資料...</div>;

  if (isLoading) return <div>正在 Loading 代辦事項...</div>;

  if (isError) return <div>{(error as Error).message}</div>;

  return (
    <>
      <div className={styles.page5_01}>
        <ul>
          {data?.map((todo: TodoElement) => (
            <div
              key={todo.id}
              style={
                screens.xs ? { marginLeft: "5px", marginRight: "5px" } : {}
              }
            >
              <p>
                <span style={screens.xs ? { fontSize: "22px" } : {}}>
                  代辦ID：
                </span>
                {todo.id}
              </p>
              <p style={screens.xs ? { fontSize: "22px" } : {}}>
                <span style={screens.xs ? { fontSize: "22px" } : {}}>
                  代辦項目：
                </span>
                {todo.title}
              </p>
              <p style={screens.xs ? { fontSize: "22px" } : {}}>
                <span style={screens.xs ? { fontSize: "22px" } : {}}>
                  代辦內容：
                </span>
                {todo.subtitle}
              </p>
            </div>
          ))}
        </ul>
      </div>
    </>
  );
}

export default Page5_01; // Generated by https://quicktype.io
